# üöÄ VIPER Trading Bot - Environment Configuration Template
# Copy this file to .env and configure your settings
# IMPORTANT: Replace all placeholder values with your actual credentials

# =============================================================================
# üîê BITGET API CONFIGURATION (REQUIRED FOR LIVE TRADING)
# =============================================================================
# Get these from https://www.bitget.com/en/account/newapi
# Enable trading permissions and IP restrictions for security

BITGET_API_KEY=your_bitget_api_key_here
BITGET_API_SECRET=your_bitget_api_secret_here
BITGET_API_PASSWORD=your_bitget_api_password_here

# Base Configuration
BITGET_REST_BASE_URL=https://api.bitget.com
BITGET_ENVIRONMENT=production

# WebSocket URLs
BITGET_WS_SPOT_URL=wss://ws.bitget.com/spot/v1/stream
BITGET_WS_FUTURES_URL=wss://ws.bitget.com/futures/v1/stream
BITGET_WS_COPY_TRADING_URL=wss://ws.bitget.com/copytrading/v1/stream

# =============================================================================
# üîê CREDENTIAL VAULT CONFIGURATION (REQUIRED FOR SECURE CREDENTIAL MANAGEMENT)
# =============================================================================
# Master key for encrypting/decrypting stored credentials
VAULT_MASTER_KEY=your_secure_master_key_here

# Access tokens for each service to authenticate with the credential vault
VAULT_ACCESS_TOKEN_LIVE_TRADING_ENGINE=your_live_trading_token_here
VAULT_ACCESS_TOKEN_EXCHANGE_CONNECTOR=your_exchange_connector_token_here
VAULT_ACCESS_TOKEN_MARKET_DATA_STREAMER=your_market_data_token_here
VAULT_ACCESS_TOKEN_ORDER_LIFECYCLE_MANAGER=your_order_lifecycle_token_here
VAULT_ACCESS_TOKEN_POSITION_SYNCHRONIZER=your_position_sync_token_here
VAULT_ACCESS_TOKEN_MCP_SERVER=your_mcp_server_token_here

# Comma-separated list of all access tokens for vault initialization
VAULT_ACCESS_TOKENS=your_live_trading_token_here,your_exchange_connector_token_here,your_market_data_token_here,your_order_lifecycle_token_here,your_position_sync_token_here,your_mcp_server_token_here

# =============================================================================
# üîß SERVICE PORT CONFIGURATION
# =============================================================================
# Default ports for all microservices

API_SERVER_PORT=8000
ULTRA_BACKTESTER_PORT=8001
RISK_MANAGER_PORT=8002
DATA_MANAGER_PORT=8003
STRATEGY_OPTIMIZER_PORT=8004
EXCHANGE_CONNECTOR_PORT=8005
MONITORING_SERVICE_PORT=8006
LIVE_TRADING_ENGINE_PORT=8007

# =============================================================================
# üíæ DATABASE AND CACHING CONFIGURATION
# =============================================================================

# Redis Configuration
REDIS_URL=redis://redis:6379
REDIS_HOST=redis
REDIS_PORT=6379

# ==================== INTELLIGENT CACHE CONFIGURATION ====================
# Different TTL strategies for different data volatility levels

# Real-time data (very short TTL)
CACHE_TTL_TICKER_SECONDS=30        # Ticker data - updates every few seconds
CACHE_TTL_ORDERBOOK_SECONDS=10     # Order book - ultra-fast updates
CACHE_TTL_TRADES_SECONDS=60        # Recent trades - moderate updates

# Market data (medium TTL)
CACHE_TTL_OHLCV_1M_SECONDS=300     # 1-minute OHLCV - 5 minutes
CACHE_TTL_OHLCV_5M_SECONDS=900     # 5-minute OHLCV - 15 minutes
CACHE_TTL_OHLCV_1H_SECONDS=3600    # 1-hour OHLCV - 1 hour
CACHE_TTL_OHLCV_4H_SECONDS=14400   # 4-hour OHLCV - 4 hours

# Analytical data (longer TTL)
CACHE_TTL_SIGNALS_SECONDS=600      # Trading signals - 10 minutes
CACHE_TTL_VIPER_SCORES_SECONDS=300 # VIPER scores - 5 minutes
CACHE_TTL_ANALYTICS_SECONDS=1800   # General analytics - 30 minutes

# Risk management data (medium TTL)
CACHE_TTL_RISK_METRICS_SECONDS=120 # Risk metrics - 2 minutes
CACHE_TTL_POSITION_DATA_SECONDS=60 # Position data - 1 minute

# Static/reference data (very long TTL)
CACHE_TTL_MARKET_INFO_SECONDS=86400  # Market info - 24 hours
CACHE_TTL_SYMBOL_LIST_SECONDS=3600   # Symbol lists - 1 hour

# ==================== CACHE MANAGEMENT ====================
UPDATE_INTERVAL_SECONDS=30         # Base update interval
CACHE_CLEANUP_INTERVAL_SECONDS=300  # Cleanup expired keys every 5 minutes
MAX_CACHE_MEMORY_PERCENT=80        # Max memory usage before eviction

# ==================== BACKWARD COMPATIBILITY ====================
CACHE_TTL_SECONDS=300  # Legacy fallback value

# =============================================================================
# üìä MONITORING AND LOGGING CONFIGURATION
# =============================================================================

# Prometheus Configuration
PROMETHEUS_PORT=9090
PROMETHEUS_ENDPOINT=9090

# Logging Configuration
LOG_LEVEL=INFO
DEBUG_MODE=false

# =============================================================================
# üéØ TRADING PARAMETERS
# =============================================================================

# Risk Management
RISK_PER_TRADE=0.02
MAX_LEVERAGE=50
DAILY_LOSS_LIMIT=0.03
MAX_POSITION_SIZE_PERCENT=0.1
ENABLE_AUTO_STOPS=true

# VIPER Strategy Parameters
VIPER_THRESHOLD=85
BACKTEST_WORKERS=4

# Optimization Settings
OPTIMIZATION_METHODS=grid_search,genetic,walk_forward
MAX_ITERATIONS=1000

# =============================================================================
# üåê SERVICE DISCOVERY AND COMMUNICATION
# =============================================================================

# Service URLs for inter-service communication
API_SERVER_URL=http://api-server:8000
ULTRA_BACKTESTER_URL=http://ultra-backtester:8000
RISK_MANAGER_URL=http://risk-manager:8000
DATA_MANAGER_URL=http://data-manager:8000
STRATEGY_OPTIMIZER_URL=http://strategy-optimizer:8000
EXCHANGE_CONNECTOR_URL=http://exchange-connector:8000
MONITORING_SERVICE_URL=http://monitoring-service:8000

# =============================================================================
# üîí SECURITY CONFIGURATION
# =============================================================================

# Rate Limiting
RATE_LIMIT_BUFFER=0.1

# API Keys (for external services if needed)
# Add any additional API keys here

# =============================================================================
# üìÅ PATH CONFIGURATION
# =============================================================================

# Data and log directories (configured in docker-compose)
# These are handled automatically by Docker volumes

# =============================================================================
# üöÄ DEPLOYMENT CONFIGURATION
# =============================================================================

# Docker Configuration
DOCKER_MODE=true
COMPOSE_PROJECT_NAME=viper-trading

# =============================================================================
# üìä GRAFANA AND MONITORING
# =============================================================================

# Grafana Configuration (default credentials)
GRAFANA_ADMIN_PASSWORD=your_secure_grafana_password_here
GRAFANA_PORT=3000

# Alert Configuration (can be modified via API)
ALERT_HIGH_CPU_THRESHOLD=80.0
ALERT_HIGH_MEMORY_THRESHOLD=85.0
ALERT_LOW_DISK_THRESHOLD=90.0

# =============================================================================
# üîÑ BACKUP AND RECOVERY
# =============================================================================

# Backup Configuration
BACKUP_INTERVAL_HOURS=24
BACKUP_RETENTION_DAYS=30

# =============================================================================
# üìà PERFORMANCE TUNING
# =============================================================================

# Thread and worker configuration
MAX_WORKERS=4
THREAD_POOL_SIZE=10
CONNECTION_POOL_SIZE=20

# Request timeouts
REQUEST_TIMEOUT_SECONDS=30
HEALTH_CHECK_TIMEOUT_SECONDS=10

# =============================================================================
# üåç EXTERNAL SERVICES
# =============================================================================

# Email notifications (optional)
SMTP_SERVER=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=your_email@gmail.com
SMTP_PASSWORD=your_app_password

# Telegram notifications (optional)
TELEGRAM_BOT_TOKEN=your_bot_token
TELEGRAM_CHAT_ID=your_chat_id

# =============================================================================
# üß™ DEVELOPMENT AND TESTING
# =============================================================================

# Development mode
DEBUG=true
TEST_MODE=false

# Mock data for testing (when no API keys available)
USE_MOCK_DATA=false
MOCK_DATA_SEED=42

# =============================================================================
# üìö DOCUMENTATION
# =============================================================================

# For more information, see:
# - docs/USER_GUIDE.md
# - docs/TECHNICAL_DOC.md
# - README.md