# 🚀 VIPER Trading Bot - Minimal Services Stack
# Starting with core infrastructure and API server

services:
  # 💾 Redis Cache - High-Performance Caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - viper-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # 📈 Prometheus - Metrics Collection
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - viper-network
    restart: unless-stopped

  # 📊 Grafana - Dashboard & Visualization
  grafana:
    image: grafana/grafana:latest
    ports:
      - "${GRAFANA_PORT:-3000}:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=viper_admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - viper-network
    restart: unless-stopped

  # 🌐 API Server - FastAPI Web Dashboard
  api-server:
    build:
      context: ../services/api-server
      dockerfile: Dockerfile
    ports:
      - "${API_SERVER_PORT:-8000}:8000"
    environment:
      - DOCKER_MODE=true
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      - SERVICE_NAME=api-server
    volumes:
      - ./logs:/app/logs
      - ./config:/app/config
    depends_on:
      - redis
    networks:
      - viper-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import socket; socket.socket().connect(('localhost', 8000))"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  viper-network:
    driver: bridge
